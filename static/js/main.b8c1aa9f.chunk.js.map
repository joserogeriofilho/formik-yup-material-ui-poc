{"version":3,"sources":["components/Navigation.module.scss","components/Navigation.js","pages/Home.js","components/FormikTextField.js","components/FormikSelect.js","pages/Subscription.js","pages/Tickets.js","Routes.js","App.js","index.js"],"names":["module","exports","Navigation","className","styles","wrapper","to","Home","Container","maxWidth","Grid","container","justifyContent","spacing","item","xs","FormikTextField","id","isArrayItem","arrayName","index","restProps","useFormikContext","values","handleChange","touched","errors","isTouched","error","value","name","TextField","onChange","Boolean","helperText","FormikSelect","children","label","select","initialValues","firstName","lastName","email","gender","validationSchema","Yup","max","required","oneOf","Subscription","onSubmit","alert","JSON","stringify","variant","fullWidth","MenuItem","Box","display","Button","color","type","tickets","of","shape","Tickets","console","log","setValues","onClick","push","onAddTicket","map","ticket","length","Routes","RouteWrapper","path","exact","component","isPrivate","rest","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8c1aa9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navigation_wrapper__1TqA-\"};","import { Link } from \"react-router-dom\";\nimport styles from './Navigation.module.scss';\n\nexport default function Navigation() {\n  return (\n    <div className={styles.wrapper}>\n      <Link to=\"/\">HOME</Link>\n      <Link to=\"/subscription\">SUBSCRIPTION</Link>\n      <Link to=\"/tickets\">TICKETS</Link>\n    </div>\n  )\n}","import { Container, Grid } from \"@material-ui/core\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid container justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={12}>\r\n          <h1>Home</h1>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <p>\r\n            Navigate through the pages for examples of Formik and Yup controlled\r\n            forms. On the \"Subscription\" page the form is plain simple. On the\r\n            \"Tickets\" page, the form is dynamically set by the user (they can\r\n            add tickets to the form at will).\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { useFormikContext } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function FormikTextField({\r\n  id,\r\n  isArrayItem,\r\n  arrayName,\r\n  index,\r\n  ...restProps\r\n}) {\r\n  const { values, handleChange, touched, errors } = useFormikContext();\r\n\r\n  const isTouched = isArrayItem\r\n    ? touched[arrayName] &&\r\n      touched[arrayName][index] &&\r\n      touched[arrayName][index][id]\r\n    : touched[id];\r\n  const error = isArrayItem\r\n    ? errors[arrayName] &&\r\n      errors[arrayName][index] &&\r\n      errors[arrayName][index][id]\r\n    : errors[id];\r\n  const value = isArrayItem ? values[arrayName][index][id] : values[id];\r\n  const name = isArrayItem ? `${arrayName}[${index}]${id}` : id;\r\n\r\n  return (\r\n    <TextField\r\n      id={name}\r\n      value={value}\r\n      onChange={handleChange}\r\n      error={isTouched && Boolean(error)}\r\n      helperText={isTouched && error}\r\n      {...restProps}\r\n    />\r\n  );\r\n}\r\n","import { useFormikContext } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function FormikSelect({\r\n  children,\r\n  label,\r\n  id,\r\n  isArrayItem,\r\n  arrayName,\r\n  index,\r\n  ...restProps\r\n}) {\r\n  const { values, handleChange, touched, errors } = useFormikContext();\r\n\r\n  const isTouched = isArrayItem\r\n    ? touched[arrayName] &&\r\n      touched[arrayName][index] &&\r\n      touched[arrayName][index][id]\r\n    : touched[id];\r\n  const error = isArrayItem\r\n    ? errors[arrayName] &&\r\n      errors[arrayName][index] &&\r\n      errors[arrayName][index][id]\r\n    : errors[id];\r\n  const value = isArrayItem ? values[arrayName][index][id] : values[id];\r\n  const name = isArrayItem ? `${arrayName}[${index}].${id}` : id;\r\n\r\n  return (\r\n    <TextField\r\n      select\r\n      label={label}\r\n      id={name}\r\n      value={value}\r\n      onChange={handleChange(name)}\r\n      error={isTouched && Boolean(error)}\r\n      helperText={isTouched && error}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </TextField>\r\n  );\r\n}\r\n","import { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Box, Button, Container, Grid, MenuItem } from \"@material-ui/core\";\r\nimport FormikTextField from \"../components/FormikTextField\";\r\nimport FormikSelect from \"../components/FormikSelect\";\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  gender: \"none\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .max(15, \"Must be 15 characters or less\")\r\n    .required(\"First name is required\"),\r\n  lastName: Yup.string()\r\n    .max(20, \"Must be 20 characters or less\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\r\n  gender: Yup.string()\r\n    .oneOf([\"non-binary\", \"other\", \"female\", \"male\"], \"Invalid gender\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nexport default function Subscription() {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid container justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={12}>\r\n          <h1>Subscription</h1>\r\n        </Grid>\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n          }}\r\n        >\r\n          <Form>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <FormikTextField\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormikTextField\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormikTextField\r\n                  id=\"email\"\r\n                  label=\"E-mail\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormikSelect\r\n                  id=\"gender\"\r\n                  label=\"Gender\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"none\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"non-binary\"}>Non-Binary</MenuItem>\r\n                  <MenuItem value={\"other\"}>Other</MenuItem>\r\n                  <MenuItem value={\"female\"}>Female</MenuItem>\r\n                  <MenuItem value={\"male\"}>Male</MenuItem>\r\n                </FormikSelect>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        </Formik>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Box, Button, Container, Grid, MenuItem } from \"@material-ui/core\";\r\nimport FormikTextField from \"../components/FormikTextField\";\r\nimport FormikSelect from \"../components/FormikSelect\";\r\n\r\nconst initialValues = {\r\n  tickets: [],\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  tickets: Yup.array().of(\r\n    Yup.object().shape({\r\n      firstName: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"First name is required\"),\r\n      lastName: Yup.string()\r\n        .max(20, \"Must be 20 characters or less\")\r\n        .required(\"Required\"),\r\n      email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\r\n      gender: Yup.string()\r\n        .oneOf([\"non-binary\", \"other\", \"female\", \"male\"], \"Invalid gender\")\r\n        .required(\"Required\"),\r\n    })\r\n  ),\r\n});\r\n\r\nexport default function Tickets() {\r\n  const onSubmit = (values) => console.log(values);\r\n\r\n  const onAddTicket = (values, setValues) => {\r\n    const tickets = [...values.tickets];\r\n    tickets.push({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      gender: \"none\",\r\n    });\r\n    setValues({ ...values, tickets });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <h1>Tickets</h1>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ errors, values, touched, setValues }) => (\r\n          <>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => onAddTicket(values, setValues)}\r\n                >\r\n                  Add Ticket\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Form>\r\n              {values.tickets.map((ticket, index) => (\r\n                <Grid container spacing={3} key={index}>\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      isArrayItem\r\n                      id={\"firstName\"}\r\n                      arrayName={\"tickets\"}\r\n                      index={index}\r\n                      label=\"First Name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      isArrayItem\r\n                      id={\"lastName\"}\r\n                      arrayName={\"tickets\"}\r\n                      index={index}\r\n                      label=\"Last Name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      isArrayItem\r\n                      id={\"email\"}\r\n                      arrayName={\"tickets\"}\r\n                      index={index}\r\n                      label=\"E-mail\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <FormikSelect\r\n                      id=\"gender\"\r\n                      arrayName={\"tickets\"}\r\n                      index={index}\r\n                      label=\"Gender\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      isArrayItem\r\n                    >\r\n                      <MenuItem value=\"none\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={\"non-binary\"}>Non-Binary</MenuItem>\r\n                      <MenuItem value={\"other\"}>Other</MenuItem>\r\n                      <MenuItem value={\"female\"}>Female</MenuItem>\r\n                      <MenuItem value={\"male\"}>Male</MenuItem>\r\n                    </FormikSelect>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n\r\n              {values.tickets.length > 0 && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from './components/Navigation';\r\nimport Home from \"./pages/Home\";\r\nimport Subscription from \"./pages/Subscription\";\r\nimport Tickets from \"./pages/Tickets\";\r\n\r\nexport default function Routes({ children }) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n      {children}\r\n      <Switch>\r\n        <RouteWrapper path=\"/\" exact component={Home} />\r\n        <RouteWrapper path=\"/subscription\" component={Subscription} />\r\n        <RouteWrapper path=\"/tickets\" component={Tickets} />\r\n        {/* <RouteWrapper isPrivate={false} path='/login' component={Login} />\r\n\r\n        {/* Redirects a user to a valid path in case of 404 */}\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction RouteWrapper({ component, isPrivate, ...rest }) {\r\n  const isLogged = () => false;\r\n  const logged = isLogged();\r\n\r\n  if (isPrivate && !logged) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (!isPrivate && logged) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...rest} component={component} />;\r\n}\r\n","import './App.css';\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}